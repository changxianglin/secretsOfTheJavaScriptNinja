/*
* 第 4 章 函数进阶： 理解函数调用
* 函数中有两个隐含的参数: arguments 和 this
* 调用函数的不同方式
* 处理函数上下文的问题
*
* 为什么 this 参数表示函数上下文？
* 函数和方法之间有什么却别？
* 如果一个构造函数显示地返回一个对象会发生什么？
*
* 4.1 使用隐式函数参数
* 形参
* 实参
*
* 4.1.1 arguments 参数
* arguments 参数是传递给函数的所有参数集合，无论是否有明确对应的形参.
* 通过它我们都可以访问到函数函数的所有参数。
* 借此可以实现原生 JavaScript 并不支持的函数重载特性，而且可以实现接收参数数量可变的可变函数。
* 有剩余参数，对 arguments 参数需求已大大减少，旧代码会涉及。
*
* arguments 对象作为函数参数的别名
* 避免使用别名
*
* 4.1.2 this 参数: 函数上下文
* this 参数是面向对象 JavaScript 编程的一个重要组成部分，
* 代表函数调用相关联的对象。因此，通常称之为函数上下文。
* 在 JavaScript 中，将一个函数作为方法调调仅仅是函数调用的一种方式。
* 事实上，this 参数的指向不仅是有定义函数的方式和位置决定的，同时还收到函数调用方式的影响。
* 真正理解 this 参数是面向对象 JavaScript 编程的基础。
*
* 4.2 函数调用
* 
*
* */